# Workflow to assign libraries

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
    
  pull_request:
    branches: [master]
    
env:
  PYENV_ROOT: /opt/python/versions
  PYENV_HOME: /opt/python/pyenv

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  plan:
    name: Plan
    # The type of runner that the job will run on
    runs-on: [self-hosted]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
 
      - name: Checkout PalantirCodeSpike
        uses: actions/checkout@v2

      - name: script
        run: scripts/build-whl-files.sh
        shell: bash

  tests:
    runs-on: [self-hosted]
    strategy:
      matrix:
        python-version: [ 3.7.9, 3.8.0 ]
# Following major versions available in pyenv:
# Availableversions:|2.1.3|2.2.3|2.3.7|2.4.0|2.4.1|2.4.2|2.4.3|2.4.4|2.4.5|2.4.6|2.5.0|2.5.1|2.5.2|2.5.3|2.5.4|2.5.5|2.5.6|2.6.6|2.6.7|2.6.8|2.6.9|2.7.0|2.7-dev|2.7.1|2.7.2|2.7.3|2.7.4|2.7.5|2.7.6|2.7.7|2.7.8|2.7.9|2.7.10|2.7.11|2.7.12|2.7.13|2.7.14|2.7.15|2.7.16|2.7.17|2.7.18|3.0.1|3.1.0|3.1.1|3.1.2|3.1.3|3.1.4|3.1.5|3.2.0|3.2.1|3.2.2|3.2.3|3.2.4|3.2.5|3.2.6|3.3.0|3.3.1|3.3.2|3.3.3|3.3.4|3.3.5|3.3.6|3.3.7|3.4.0|3.4-dev|3.4.1|3.4.2|3.4.3|3.4.4|3.4.5|3.4.6|3.4.7|3.4.8|3.4.9|3.4.10|3.5.0|3.5-dev|3.5.1|3.5.2|3.5.3|3.5.4|3.5.5|3.5.6|3.5.7|3.5.8|3.5.9|3.5.10|3.6.0|3.6-dev|3.6.1|3.6.2|3.6.3|3.6.4|3.6.5|3.6.6|3.6.7|3.6.8|3.6.9|3.6.10|3.6.11|3.6.12|3.6.13|3.7.0|3.7-dev|3.7.1|3.7.2|3.7.3|3.7.4|3.7.5|3.7.6|3.7.7|3.7.8|3.7.9|3.7.10|3.8.0|3.8-dev|3.8.1|3.8.2|3.8.3|3.8.4|3.8.5|3.8.6|3.8.7|3.8.8|3.9.0|3.9-dev|3.9.1|3.9.2|3.10.0a5|3.10-dev

    steps:
    - uses: actions/checkout@v2
    - name: Install prereqs
      run: |
        yum -y install gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel tk-devel libffi-devel python27-python-pip
        curl -ks http://aia.pki.va.gov/PKI/AIA/VA/VA-Internal-S2-RCA1-v1.cer > /etc/pki/ca-trust/source/anchors/varoot.cer
        update-ca-trust extract
  
    - name: Install pyenv
# Messing around with these directories is done to account for the first run use case and because git clone will fail if a directory exists
      run: |
        mkdir -p ${{ env.PYENV_HOME }}
        rm -rf ${{ env.PYENV_HOME }}
        mkdir -p ${{ env.PYENV_ROOT }}
        git clone https://github.com/pyenv/pyenv.git ${{ env.PYENV_HOME }}
    - name: Install python version
      run: |
        ${{ env.PYENV_HOME }}/bin/pyenv install --skip-existing ${{ matrix.python-version }}
        ${{ env.PYENV_HOME }}/bin/pyenv rehash
    - name: setup PATH
      run: |
        echo "${{ env.PYENV_ROOT }}/shims" >> $GITHUB_PATH
    - name: Run Python Command
# add any commands you want to run against the currently selected matrix version here.  If you add extra steps start with the same two lines here that set and export the PYENV_VERSION variable
      run: |
        PYENV_VERSION=${{ matrix.python-version }}
        export PYENV_VERSION
        python -c "import sys; print(sys.version)"
    - name: Install Python libraries
      run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install setuptools
          python setup.py bdist_wheel
    - name: Run All Unit Tests
      run: pytest --cov-config=.coveragerc --cov src --ignore=./tests/unit/data_copy/clients/azure/test_a_container_client.py --ignore=./tests/unit/data_copy/service/test_copy_service.py
    - name: Start Docker Container
      run: docker-compose up -d
    - name: Run Azure Tests
      run: pytest tests/unit/data_copy/clients/azure/test_a_container_client.py tests/unit/data_copy/service/test_copy_service.py
    - name: Stop Docker Container
      run: docker-compose down
